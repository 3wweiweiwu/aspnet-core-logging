parameters:
  job:
    name: ''
    displayName: ''
  pool: ''
  build:
    configuration: 'Release'

jobs:
- job: ${{ parameters.job.name }}
  displayName: ${{ parameters.job.displayName }}
  continueOnError: False
  pool: ${{ parameters.pool }}
  steps:
  # Compile source code
  - task: DotNetCoreCLI@2
    displayName: Build sources
    name: build_sources
    inputs:
      command: custom
      custom: build
      arguments: 'Todo.sln --configuration ${{ parameters.build.configuration }}'
  # Run tests
  - task: DotNetCoreCLI@2
    displayName: Run integration tests
    name: run_integration_tests
    inputs:
      command: custom
      custom: test
      projects: ./Tests/TodoWebApp.IntegrationTests/*.csproj
      configuration: ${{ parameters.build.configuration }}
      publishTestResults: True
      arguments: '--no-build /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput="./CodeCoverage/code-coverage-data.xml"'
  # Install reportgenerator tool to be able to generate code coverage HTML report
  # See more here: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/build/dotnet-core-cli?view=vsts
  - task: DotNetCoreCLI@2
    displayName: Install reportgenerator
    inputs:
      command: custom
      custom: tool
      arguments: 'install dotnet-reportgenerator-globaltool --version 4.0.3 --tool-path .'
  - script: reportgenerator "-reports:**/CodeCoverage/code-coverage-data.xml" "-targetdir:./CodeCoverageReport"
    name: generate_code_coverage_report
    displayName: Generate code coverage report
  # Publish code coverage report
  # See more here: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/test/publish-code-coverage-results?view=vsts.
  - task: PublishCodeCoverageResults@1
    displayName: Publish code coverage report
    name: publish_code_coverage_report
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '**/CodeCoverage/code-coverage-data.xml'
      reportDirectory: '**/CodeCoverageReport'