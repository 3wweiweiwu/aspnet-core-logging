parameters:
  name: ''
  displayName: ''
  pool: ''
  build:
    configuration: ''

jobs:
- job: ${{ parameters.name }}
  displayName: ${{ parameters.displayName }}
  continueOnError: true
  pool: ${{ parameters.pool }}
  steps:
  - script: dotnet build Todo.sln --configuration ${{ parameters.build.configuration }}
    name: build_app
    displayName: Build application
  - script: 'dotnet test ./Tests/TodoWebApp.IntegrationTests/TodoWebApp.IntegrationTests.csproj --no-build --configuration ${{ parameters.build.configuration }} --logger "trx;LogFileName=TodoWebApp.IntegrationTests.TestResults.trx" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput="./TestResults/code-coverage-data.xml"'
    name: run_tests
    displayName: Run tests
#  - script: dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.0.3
#    name: install_reportgenerator
#    displayName: Install ReportGenerator global tool
#  - script: 'dotnet reportgenerator "-reports:./Tests/*/TestResults/code-coverage-data.xml" "-targetdir:./CodeCoverageResults/.coveragereport"'
#    name: generate_code_coverage_report
#    displayName: Generate code coverage report
  # Publish test results
  # See more here: https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/test/publish-test-results?view=vsts&tabs=yaml.
  - task: PublishTestResults@2
    displayName: Publish test results
    name: publish_test_results
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '**/*.TestResults.trx'
      mergeTestResults: true
      buildConfiguration: ${{ parameters.build.configuration }}
      publishRunAttachments: true
  - task: PublishCodeCoverageResults@1
    displayName: Publish code coverage results
    name: publish_code_coverage_results
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '**/code-coverage-data.xml'